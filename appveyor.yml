environment:
  nodejs_version: "4.4.7"
  matrix:
    - PYTHON3: "C:\\Python34"
      PYTHON3_VERSION: "3.4.3"
      PYTHON3_ARCH: "32"
      # PYTHON2.7 REQUIRED FOR NODE-GYP
      PYTHON2: "C:\\Python27"
      PYTHON2_VERSION: "2.7.9"
      PYTHON2_ARCH: "32"

  PIP3: C:\\Python34\Scripts\pip
  PIP2: C:\\Python27\Scripts\pip

  npm_config_arch: ia32
  


platform: x86

configuration: Release

init:
  - cmd: ECHO Processor architecture - %PROCESSOR_ARCHITECTURE%
  - cmd: wmic OS get OSArchitecture
  - cmd: npm config set msvs_version 2015 --global
  # As AppVeyor has multiple python install, verify which one uses by default
  - cmd: ECHO %PYTHON3% %PYTHON3_VERSION% %PYTHON3_ARCH%
  - cmd: "%PYTHON3%\\python --version"
  - cmd: "%PYTHON3%\\python -c \"import struct; print(struct.calcsize('P') * 8)\""
  - cmd: "%PYTHON3%\\python -m pip install --upgrade pip"
  
  - cmd: ECHO %PYTHON2% %PYTHON2_VERSION% %PYTHON2_ARCH%
  - cmd: "%PYTHON2%\\python --version"
  - cmd: "%PYTHON2%\\python -c \"import struct; print(struct.calcsize('P') * 8)\""
  - cmd: "%PYTHON2%\\python -m pip install --upgrade pip"

  # Set the relevant python and pip location to the path
  - cmd: set PATH=%PYTHON3%;%PYTHON3%\scripts;%PYTHON2%;%PYTHON2%\scripts;%PATH%
  - cmd: ECHO Path - %PATH%

  - ps: Install-Product node 6.3.0 x86
  - cmd: node --version
  - cmd: npm --version
  # CRITICAL FOR NODE-GYP TO WORK
  - cmd: npm -g install npm@latest

  - cmd: "%PIP3% install autobahn"
  - cmd: "%PIP3% install zope.interface"
  - cmd: "%PIP3% install pyserial"
  - cmd: "%PIP3% install argh"
#  - cmd: "%PIP3% install attrs"
#  - cmd: "%PIP3% install cbor"
#  - cmd: "%PIP3% install cffi"
#  - cmd: "%PIP3% install click"
#  - cmd: "%PIP3% install cryptography"
#  - cmd: "%PIP3% install idna"
#  - cmd: "%PIP3% install Jinja2"
#  - cmd: "%PIP3% install lmdb"
#  - cmd: "%PIP3% install MarkupSafe"
#  - cmd: "%PIP3% install mistune"
#  - cmd: "%PIP3% install netaddr"
#  - cmd: "%PIP3% install pathtools"
#  - cmd: "%PIP3% install psutil"
#  - cmd: "%PIP3% install py-ubjson"
#  - cmd: "%PIP3% install pyasn1"
#  - cmd: "%PIP3% install pyasn1-modules"
#  - cmd: "%PIP3% install pycparser"
#  - cmd: "%PIP3% install Pygments"
  - cmd: "%PIP3% install pyinstaller"
#  - cmd: "%PIP3% install PyNaCl"
#  - cmd: "%PIP3% install pyOpenSSL"
#  - cmd: "%PIP3% install pyserial"
#  - cmd: "%PIP3% install PyTrie"
  - cmd: "%PIP3% install PyYAML"
 # - cmd: "%PIP3% install requests"
#  - cmd: "%PIP3% install sdnotify"
#  - cmd: "%PIP3% install sdnotify"
#  - cmd: "%PIP3% install service-identity"
#  - cmd: "%PIP3% install setproctitle"
#  - cmd: "%PIP3% install shutilwhich"
  - cmd: "%PIP3% install six"
  - cmd: "%PIP3% install treq"
#  - cmd: "%PIP3% install Twisted"
  - cmd: "%PIP3% install txaio"
  - cmd: "%PIP3% install u-msgpack-python"
#  - cmd: "%PIP3% install watchdog"

install:
  - cmd: git submodule update --init --recursive
  - cmd: "%PIP3% install https://dl.dropboxusercontent.com/s/ks2ye06y1azkit8/py2exe-0.9.2.2-cp34-none-win32.whl"
#  - cmd: "%PIP2% install py2exe"
#  - cmd: pip install mkdocs
#  - cmd: cd backend\backend
#  - cmd: "%PIP3% freeze > requirements.txt"
#  - cmd: type requirements.txt
#  - cmd: cp requirements.txt ..\..
#  - cmd: cd ..\..

#  - cmd: "%PIP3% install zope"

  - cmd: "%PIP2% freeze"

#  - cmd: "%PYTHON3%\\python scripts\\zope_fix.py"

  - cmd: "%PIP3% freeze"
#  - cmd: "%PYTHON3%\\python scripts\\build_py2exe.py"
#  - cmd: "%PYTHON3%\\python scripts\\build_pyinstaller_win.py"
  - cmd: pyinstaller scripts\pyinstaller.spec

  - cmd: dir otexec\backexec
  - cmd: xcopy /e otexec\backexec backend-dist\win
#  - cmd: node --version
#  - cmd: npm --version
  - cmd: npm config list
#  - cmd: npm config set msvs_version 2013 -g
#  - cmd: npm config list
  - cmd: npm config set python %PYTHON2%\python.exe --global
  - cmd: npm uninstall node-gyp -g
  - cmd: npm uninstall node-gyp
  - cmd: npm install node-gyp
  - cmd: npm install node-gyp -g
  - cmd: node-gyp --python %PYTHON2%
  - cmd: npm install bufferutil -g
  - cmd: npm install electron-packager --save-dev
  - cmd: npm install electron-packager -g
  - cmd: npm install electron-prebuilt --save-dev
  - cmd: npm install electron-prebuilt -g
#  - cmd: npm install node-gyp
#  - cmd: npm prune
#  - cmd: npm uninstall node-gyp
#  - cmd: npm uninstall node-gyp -g
#  - cmd: npm install node-gyp -g

  - cmd: npm prune
  - cmd: dir

  - cmd: npm install
  - cmd: set PATH=%PATH%;C:\projects\appveyor\node_modules\
  - cmd: cd C:\projects\otone-frontend
  - cmd: 
  - cmd: "%PYTHON27%\\python scripts\\build_electron_app_win.py"
#  - cmd: python scripts\zip_ot_app_win.py
#  - cmd: dir out
#  - cmd: dir out\OpenTrons-win32-ia32
  - cmd: dir


build: off

#artifacts:
#  - path: out\*.zip
#    name: OTAppWin


#deploy:
#  - provider: S3
#    access_key_id: $(AWS_ACCESS_KEY)
#    secret_access_key: $(AWS_SECRET_KEY)
#    bucket: ot-app-builds
#    region: us-east-1
#    set_public: true
#    folder: win
#    artifact: OTAppWin
#    on:
#      branch: 16-add-ci-cd-pipeline-for-windows-app-frontend
